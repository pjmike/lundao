<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pjmike.lundao.mapper.ThesisMapper" >
  <resultMap id="BaseResultMap" type="com.pjmike.lundao.po.Thesis" >
    <id column="thesisId" property="thesisid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="view" property="view" jdbcType="INTEGER" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="attention" property="attention" jdbcType="INTEGER" />
    <result column="dislike" property="dislike" jdbcType="INTEGER" />
    <result column="ask" property="ask" jdbcType="INTEGER" />
    <result column="question" property="question" jdbcType="INTEGER" />
    <result column="asklist" property="asklist" jdbcType="INTEGER" />
    <result column="questionlist" property="questionlist" jdbcType="INTEGER" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="contentTime" property="contenttime" jdbcType="TIMESTAMP" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="uncomplete" property="uncomplete" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pjmike.lundao.po.Thesis" extends="BaseResultMap" >
    <result column="state" property="state" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  
  
  
  
  <!-- 用于查找某一论点下所有的提问及回复 -->
  <!-- 以下是提问 -->
  <resultMap id="BaseResultMap1" type="com.pjmike.lundao.po.ThesisExtend" >
    <id column="thesisId" property="thesisid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="view" property="view" jdbcType="INTEGER" />
    <result column="like" property="like" jdbcType="INTEGER" />
    <result column="attention" property="attention" jdbcType="INTEGER" />
    <result column="dislike" property="dislike" jdbcType="INTEGER" />
    <result column="ask" property="ask" jdbcType="INTEGER" />
    <result column="question" property="question" jdbcType="INTEGER" />
    <result column="asklist" property="asklist" jdbcType="INTEGER" />
    <result column="questionlist" property="questionlist" jdbcType="INTEGER" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="contentTime" property="contenttime" jdbcType="TIMESTAMP" />
    <result column="complete" property="complete" jdbcType="INTEGER" />
    <result column="uncomplete" property="uncomplete" jdbcType="INTEGER" />
    
      <!-- 以下是提问级联 -->
    <collection property="asks" ofType="com.pjmike.lundao.po.Ask">
    	
	    <id column="askId" property="askid" jdbcType="INTEGER" />
	    <result column="debateId" property="debateid" jdbcType="INTEGER" />
	    <result column="describtion" property="describtion" jdbcType="VARCHAR" />
	    <result column="content" property="content" jdbcType="VARCHAR" />
	    <result column="view" property="view" jdbcType="INTEGER" />
	    <result column="like" property="like" jdbcType="INTEGER" />
	    <result column="attention" property="attention" jdbcType="INTEGER" />
	    <result column="dislike" property="dislike" jdbcType="INTEGER" />
	    <result column="reply" property="reply" jdbcType="INTEGER" />
	    <result column="replylist" property="replylist" jdbcType="INTEGER" />
	    <result column="clickcount" property="clickcount" jdbcType="INTEGER" />
	    <result column="username" property="username" jdbcType="VARCHAR" />
	    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
	    <result column="contentTime" property="contenttime" jdbcType="TIMESTAMP" />
	    <result column="askcondition" property="askcondition" jdbcType="VARCHAR" />
    </collection>
    
    <!-- 以下是异议级联 -->
    <collection property="questions" ofType="com.pjmike.lundao.po.Question">
    	<id column="questionId" property="questionid" jdbcType="INTEGER" />
	    <result column="debateId" property="debateid" jdbcType="INTEGER" />
	    <result column="describtion" property="describtion" jdbcType="VARCHAR" />
	    <result column="content" property="content" jdbcType="VARCHAR" />
	    <result column="view" property="view" jdbcType="INTEGER" />
	    <result column="like" property="like" jdbcType="INTEGER" />
	    <result column="attention" property="attention" jdbcType="INTEGER" />
	    <result column="dislike" property="dislike" jdbcType="INTEGER" />
	    <result column="reply" property="reply" jdbcType="INTEGER" />
	    <result column="replylist" property="replylist" jdbcType="INTEGER" />
	    <result column="clickcount" property="clickcount" jdbcType="INTEGER" />
	    <result column="username" property="username" jdbcType="VARCHAR" />
	    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
	    <result column="contentTime" property="contenttime" jdbcType="TIMESTAMP" />
	    <result column="condition" property="condition" jdbcType="VARCHAR" />
    </collection>
    
  </resultMap>
  <resultMap id="ResultMapWithBLOBs1" type="com.pjmike.lundao.po.ThesisExtend" extends="BaseResultMap1" >
    <result column="state" property="state" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    thesisId, description, view, like, attention, dislike, ask, question, asklist, questionlist, 
    publishTime, contentTime, complete, uncomplete
  </sql>
  <sql id="Blob_Column_List" >
    state
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pjmike.lundao.po.ThesisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from thesis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pjmike.lundao.po.ThesisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from thesis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from thesis
    where thesisId = #{thesisid,jdbcType=INTEGER}
  </select>
  
  
  
  <!-- 查询所有的论点 -->
  
  <!-- 一对多查询 -->
  <select id="selectBykey" resultMap="ResultMapWithBLOBs">
  	select thesis.* from thesis,debateTopic where thesis.debateId = debateTopic.topicId 
  </select>
  <!-- 根据一个论点id查询出它下面所有的提问及异议 -->
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from thesis
    where thesisId = #{thesisid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pjmike.lundao.po.ThesisExample" >
    delete from thesis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pjmike.lundao.po.Thesis" >
    insert into thesis (thesisId, description, view, 
      like, attention, dislike, 
      ask, question, asklist, 
      questionlist, publishTime, contentTime, 
      complete, uncomplete, state
      )
    values (#{thesisid,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{view,jdbcType=INTEGER}, 
      #{like,jdbcType=INTEGER}, #{attention,jdbcType=INTEGER}, #{dislike,jdbcType=INTEGER}, 
      #{ask,jdbcType=INTEGER}, #{question,jdbcType=INTEGER}, #{asklist,jdbcType=INTEGER}, 
      #{questionlist,jdbcType=INTEGER}, #{publishtime,jdbcType=TIMESTAMP}, #{contenttime,jdbcType=TIMESTAMP}, 
      #{complete,jdbcType=INTEGER}, #{uncomplete,jdbcType=INTEGER}, #{state,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pjmike.lundao.po.Thesis" >
    insert into thesis
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="thesisid != null" >
        thesisId,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="view != null" >
        view,
      </if>
      <if test="like != null" >
        like,
      </if>
      <if test="attention != null" >
        attention,
      </if>
      <if test="dislike != null" >
        dislike,
      </if>
      <if test="ask != null" >
        ask,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="asklist != null" >
        asklist,
      </if>
      <if test="questionlist != null" >
        questionlist,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="contenttime != null" >
        contentTime,
      </if>
      <if test="complete != null" >
        complete,
      </if>
      <if test="uncomplete != null" >
        uncomplete,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="thesisid != null" >
        #{thesisid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        #{view,jdbcType=INTEGER},
      </if>
      <if test="like != null" >
        #{like,jdbcType=INTEGER},
      </if>
      <if test="attention != null" >
        #{attention,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        #{dislike,jdbcType=INTEGER},
      </if>
      <if test="ask != null" >
        #{ask,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        #{question,jdbcType=INTEGER},
      </if>
      <if test="asklist != null" >
        #{asklist,jdbcType=INTEGER},
      </if>
      <if test="questionlist != null" >
        #{questionlist,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="contenttime != null" >
        #{contenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="complete != null" >
        #{complete,jdbcType=INTEGER},
      </if>
      <if test="uncomplete != null" >
        #{uncomplete,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pjmike.lundao.po.ThesisExample" resultType="java.lang.Integer" >
    select count(*) from thesis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update thesis
    <set >
      <if test="record.thesisid != null" >
        thesisId = #{record.thesisid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.view != null" >
        view = #{record.view,jdbcType=INTEGER},
      </if>
      <if test="record.like != null" >
        like = #{record.like,jdbcType=INTEGER},
      </if>
      <if test="record.attention != null" >
        attention = #{record.attention,jdbcType=INTEGER},
      </if>
      <if test="record.dislike != null" >
        dislike = #{record.dislike,jdbcType=INTEGER},
      </if>
      <if test="record.ask != null" >
        ask = #{record.ask,jdbcType=INTEGER},
      </if>
      <if test="record.question != null" >
        question = #{record.question,jdbcType=INTEGER},
      </if>
      <if test="record.asklist != null" >
        asklist = #{record.asklist,jdbcType=INTEGER},
      </if>
      <if test="record.questionlist != null" >
        questionlist = #{record.questionlist,jdbcType=INTEGER},
      </if>
      <if test="record.publishtime != null" >
        publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contenttime != null" >
        contentTime = #{record.contenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.complete != null" >
        complete = #{record.complete,jdbcType=INTEGER},
      </if>
      <if test="record.uncomplete != null" >
        uncomplete = #{record.uncomplete,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update thesis
    set thesisId = #{record.thesisid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      view = #{record.view,jdbcType=INTEGER},
      like = #{record.like,jdbcType=INTEGER},
      attention = #{record.attention,jdbcType=INTEGER},
      dislike = #{record.dislike,jdbcType=INTEGER},
      ask = #{record.ask,jdbcType=INTEGER},
      question = #{record.question,jdbcType=INTEGER},
      asklist = #{record.asklist,jdbcType=INTEGER},
      questionlist = #{record.questionlist,jdbcType=INTEGER},
      publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      contentTime = #{record.contenttime,jdbcType=TIMESTAMP},
      complete = #{record.complete,jdbcType=INTEGER},
      uncomplete = #{record.uncomplete,jdbcType=INTEGER},
      state = #{record.state,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update thesis
    set thesisId = #{record.thesisid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      view = #{record.view,jdbcType=INTEGER},
      like = #{record.like,jdbcType=INTEGER},
      attention = #{record.attention,jdbcType=INTEGER},
      dislike = #{record.dislike,jdbcType=INTEGER},
      ask = #{record.ask,jdbcType=INTEGER},
      question = #{record.question,jdbcType=INTEGER},
      asklist = #{record.asklist,jdbcType=INTEGER},
      questionlist = #{record.questionlist,jdbcType=INTEGER},
      publishTime = #{record.publishtime,jdbcType=TIMESTAMP},
      contentTime = #{record.contenttime,jdbcType=TIMESTAMP},
      complete = #{record.complete,jdbcType=INTEGER},
      uncomplete = #{record.uncomplete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pjmike.lundao.po.Thesis" >
    update thesis
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="like != null" >
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="attention != null" >
        attention = #{attention,jdbcType=INTEGER},
      </if>
      <if test="dislike != null" >
        dislike = #{dislike,jdbcType=INTEGER},
      </if>
      <if test="ask != null" >
        ask = #{ask,jdbcType=INTEGER},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=INTEGER},
      </if>
      <if test="asklist != null" >
        asklist = #{asklist,jdbcType=INTEGER},
      </if>
      <if test="questionlist != null" >
        questionlist = #{questionlist,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null" >
        publishTime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="contenttime != null" >
        contentTime = #{contenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="complete != null" >
        complete = #{complete,jdbcType=INTEGER},
      </if>
      <if test="uncomplete != null" >
        uncomplete = #{uncomplete,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where thesisId = #{thesisid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pjmike.lundao.po.Thesis" >
    update thesis
    set description = #{description,jdbcType=VARCHAR},
      view = #{view,jdbcType=INTEGER},
      like = #{like,jdbcType=INTEGER},
      attention = #{attention,jdbcType=INTEGER},
      dislike = #{dislike,jdbcType=INTEGER},
      ask = #{ask,jdbcType=INTEGER},
      question = #{question,jdbcType=INTEGER},
      asklist = #{asklist,jdbcType=INTEGER},
      questionlist = #{questionlist,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      contentTime = #{contenttime,jdbcType=TIMESTAMP},
      complete = #{complete,jdbcType=INTEGER},
      uncomplete = #{uncomplete,jdbcType=INTEGER},
      state = #{state,jdbcType=LONGVARCHAR}
    where thesisId = #{thesisid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pjmike.lundao.po.Thesis" >
    update thesis
    set description = #{description,jdbcType=VARCHAR},
      view = #{view,jdbcType=INTEGER},
      like = #{like,jdbcType=INTEGER},
      attention = #{attention,jdbcType=INTEGER},
      dislike = #{dislike,jdbcType=INTEGER},
      ask = #{ask,jdbcType=INTEGER},
      question = #{question,jdbcType=INTEGER},
      asklist = #{asklist,jdbcType=INTEGER},
      questionlist = #{questionlist,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      contentTime = #{contenttime,jdbcType=TIMESTAMP},
      complete = #{complete,jdbcType=INTEGER},
      uncomplete = #{uncomplete,jdbcType=INTEGER}
    where thesisId = #{thesisid,jdbcType=INTEGER}
  </update>
</mapper>